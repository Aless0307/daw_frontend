{
    "sourceFile": "src/App.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1746060525098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746060539739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Routes, Route, Navigate, HashRouter } from 'react-router-dom';\n import { AuthProvider, useAuth } from './context/AuthContext';\n import Login from './pages/Login';\n import AccessibleLogin from './pages/AccessibleLogin';\n-import Home from './pages/Home';\n+import Home from './pages/LoggedIn/Home';\n import Acerca from './pages/Acerca';\n import Navbar from './components/Navbar';\n import Footer from './components/Footer';\n import Contact from './pages/Contact';\n"
                },
                {
                    "date": 1746060677409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,15 +2,17 @@\n import { Routes, Route, Navigate, HashRouter } from 'react-router-dom';\n import { AuthProvider, useAuth } from './context/AuthContext';\n import Login from './pages/Login';\n import AccessibleLogin from './pages/AccessibleLogin';\n-import Home from './pages/LoggedIn/Home';\n import Acerca from './pages/Acerca';\n import Navbar from './components/Navbar';\n import Footer from './components/Footer';\n import Contact from './pages/Contact';\n import ProtectedRoute from './components/ProtectedRoute';\n \n+// Una vez que inicié sesión...\n+import Home from './pages/LoggedIn/Home';\n+import Logica from './pages/LoggedIn/Logica';\n const AppLayout = () => {\n   const { user } = useAuth();\n   \n   return (\n"
                },
                {
                    "date": 1746989786520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,107 @@\n-import React from 'react';\n+// src/App.jsx\n+import React, { useState, useCallback } from 'react'; // Añadir useState, useCallback\n import { Routes, Route, Navigate, HashRouter } from 'react-router-dom';\n import { AuthProvider, useAuth } from './context/AuthContext';\n+import { NavigationProvider } from './context/NavigationContext'; // <-- 1. IMPORTAR PROVIDER (ajusta ruta)\n import Login from './pages/Login';\n import AccessibleLogin from './pages/AccessibleLogin';\n import Acerca from './pages/Acerca';\n import Navbar from './components/Navbar';\n import Footer from './components/Footer';\n import Contact from './pages/Contact';\n import ProtectedRoute from './components/ProtectedRoute';\n \n-// Una vez que inicié sesión...\n+// Importar componentes de usuario logueado\n import Home from './pages/LoggedIn/Home';\n-import Logica from './pages/LoggedIn/Logica';\n+// Asegúrate de que la importación sea nombrada si el archivo usa 'export const'\n+import { LogicSectionPage } from './pages/LoggedIn/Logica'; // <-- 2. IMPORTAR PAGINA LOGICA (ajusta ruta)\n+// Importar Sidebar aquí si AppLayout lo renderiza directamente\n+import SideBar from './pages/LoggedIn/Componentes-Iniciado/SideBar'; // <-- 3. IMPORTAR SIDEBAR (ajusta ruta)\n+\n+\n+// Componente Layout Principal\n const AppLayout = () => {\n   const { user } = useAuth();\n-  \n+\n+  // --- 4. Añadir estado y handler para Sidebar ---\n+  const [isSidebarExpanded, setIsSidebarExpanded] = useState(false);\n+  const handleSidebarToggle = useCallback((expanded) => {\n+     setIsSidebarExpanded(expanded);\n+  }, []); // useCallback para estabilidad de la prop\n+\n+  // Calcular padding si es necesario (o dejar que SideBar maneje su ancho)\n+  // const sidebarWidth = isSidebarExpanded ? 250 : 60; // Ejemplo\n+  // const mainContentPaddingLeft = user ? sidebarWidth : 0; // Solo si hay usuario/sidebar\n+\n   return (\n+    // Contenedor flex principal para toda la altura\n     <div className=\"flex flex-col min-h-screen\">\n-      {user && <Navbar />}\n-      <main className=\"flex-grow\">\n-        <Routes>\n-          <Route path=\"/\" element={<AccessibleLogin />} />\n-          <Route path=\"/login\" element={!user ? <Login /> : <Navigate to=\"/home\" />} />\n-          <Route path=\"/contact\" element={<Contact />} />\n-          <Route path=\"/acerca\" element={<Acerca />} />\n-          <Route path=\"/home\" element={<ProtectedRoute><Home /></ProtectedRoute>} />\n-          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n-        </Routes>\n-      </main>\n+      {/* Navbar se muestra si hay usuario */}\n+\n+      {/* Contenedor flex para Sidebar y Contenido principal */}\n+      <div className=\"flex flex-1\"> {/* Asegura que ocupe el espacio vertical */}\n+        {/* --- 5. Renderizar Sidebar Condicionalmente --- */}\n+        {user && (\n+          <SideBar\n+            isExpanded={isSidebarExpanded}\n+            onToggleExpansion={handleSidebarToggle}\n+            user={user} // Pasar datos de usuario si los necesita\n+            // logout={logout} // Ya no se pasa logout\n+          />\n+        )}\n+\n+        {/* Contenido Principal */}\n+        <main\n+          className=\"flex-grow overflow-x-auto\" // Permite scroll si el contenido es muy ancho\n+          // Opcional: Aplicar padding basado en sidebar si es necesario por tu CSS\n+          // style={{ paddingLeft: `${mainContentPaddingLeft}px`, transition: 'padding-left 0.3s ease' }}\n+        >\n+          <Routes>\n+            {/* Rutas Públicas */}\n+            <Route path=\"/\" element={<AccessibleLogin />} />\n+            <Route path=\"/login\" element={!user ? <Login /> : <Navigate to=\"/home\" />} />\n+            <Route path=\"/contact\" element={<Contact />} />\n+            <Route path=\"/acerca\" element={<Acerca />} />\n+\n+            {/* Rutas Protegidas */}\n+            <Route path=\"/home\" element={<ProtectedRoute><Home /></ProtectedRoute>} />\n+            {/* Asegúrate que '/logica' también esté protegida si es necesario */}\n+            <Route path=\"/logica\" element={<ProtectedRoute><LogicSectionPage /></ProtectedRoute>} />\n+\n+            {/* Añadir otras rutas protegidas aquí (deben coincidir con navItems en SideBar) */}\n+            {/* <Route path=\"/projects\" element={<ProtectedRoute><Projects /></ProtectedRoute>} /> */}\n+            {/* <Route path=\"/calendar\" element={<ProtectedRoute><Calendar /></ProtectedRoute>} /> */}\n+            {/* <Route path=\"/settings\" element={<ProtectedRoute><Settings /></ProtectedRoute>} /> */}\n+            {/* <Route path=\"/help\" element={<ProtectedRoute><Help /></ProtectedRoute>} /> */}\n+\n+            {/* Redirección por defecto */}\n+            <Route path=\"*\" element={<Navigate to={user ? \"/home\" : \"/\"} />} />\n+          </Routes>\n+        </main>\n+      </div>\n+\n+      {/* Footer se muestra si hay usuario */}\n       {user && <Footer />}\n     </div>\n   );\n };\n \n+// Componente Principal de la Aplicación\n const App = () => {\n   return (\n+    // 1. AuthProvider (más externo)\n     <AuthProvider>\n+      {/* 2. HashRouter */}\n       <HashRouter>\n-        <AppLayout />\n+        {/* --- 6. Envolver con NavigationProvider --- */}\n+        <NavigationProvider>\n+          {/* 3. AppLayout (o tu estructura principal) */}\n+          <AppLayout />\n+        </NavigationProvider>\n+        {/* --- Fin Wrapper --- */}\n       </HashRouter>\n     </AuthProvider>\n   );\n };\n \n-export default App;\n+export default App;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746997601250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,17 +40,10 @@\n \n       {/* Contenedor flex para Sidebar y Contenido principal */}\n       <div className=\"flex flex-1\"> {/* Asegura que ocupe el espacio vertical */}\n         {/* --- 5. Renderizar Sidebar Condicionalmente --- */}\n-        {user && (\n-          <SideBar\n-            isExpanded={isSidebarExpanded}\n-            onToggleExpansion={handleSidebarToggle}\n-            user={user} // Pasar datos de usuario si los necesita\n-            // logout={logout} // Ya no se pasa logout\n-          />\n-        )}\n \n+\n         {/* Contenido Principal */}\n         <main\n           className=\"flex-grow overflow-x-auto\" // Permite scroll si el contenido es muy ancho\n           // Opcional: Aplicar padding basado en sidebar si es necesario por tu CSS\n@@ -67,14 +60,8 @@\n             <Route path=\"/home\" element={<ProtectedRoute><Home /></ProtectedRoute>} />\n             {/* Asegúrate que '/logica' también esté protegida si es necesario */}\n             <Route path=\"/logica\" element={<ProtectedRoute><LogicSectionPage /></ProtectedRoute>} />\n \n-            {/* Añadir otras rutas protegidas aquí (deben coincidir con navItems en SideBar) */}\n-            {/* <Route path=\"/projects\" element={<ProtectedRoute><Projects /></ProtectedRoute>} /> */}\n-            {/* <Route path=\"/calendar\" element={<ProtectedRoute><Calendar /></ProtectedRoute>} /> */}\n-            {/* <Route path=\"/settings\" element={<ProtectedRoute><Settings /></ProtectedRoute>} /> */}\n-            {/* <Route path=\"/help\" element={<ProtectedRoute><Help /></ProtectedRoute>} /> */}\n-\n             {/* Redirección por defecto */}\n             <Route path=\"*\" element={<Navigate to={user ? \"/home\" : \"/\"} />} />\n           </Routes>\n         </main>\n"
                }
            ],
            "date": 1746060525098,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport { Routes, Route, Navigate, HashRouter } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport Login from './pages/Login';\nimport AccessibleLogin from './pages/AccessibleLogin';\nimport Home from './pages/Home';\nimport Acerca from './pages/Acerca';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Contact from './pages/Contact';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nconst AppLayout = () => {\n  const { user } = useAuth();\n  \n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      {user && <Navbar />}\n      <main className=\"flex-grow\">\n        <Routes>\n          <Route path=\"/\" element={<AccessibleLogin />} />\n          <Route path=\"/login\" element={!user ? <Login /> : <Navigate to=\"/home\" />} />\n          <Route path=\"/contact\" element={<Contact />} />\n          <Route path=\"/acerca\" element={<Acerca />} />\n          <Route path=\"/home\" element={<ProtectedRoute><Home /></ProtectedRoute>} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </main>\n      {user && <Footer />}\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <HashRouter>\n        <AppLayout />\n      </HashRouter>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n"
        }
    ]
}