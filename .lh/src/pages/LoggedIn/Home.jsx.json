{
    "sourceFile": "src/pages/LoggedIn/Home.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1746061768374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746117637719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,34 @@\n import React from 'react';\n import { useAuth } from '../../context/AuthContext';\n-\n+import { config } from '../../../config';\n const Home = () => {\n   const { user, logout } = useAuth();\n \n+  const fetchObjectId = () => {\n+    //haremos una llamada a la api en la ruta @router.get(\"/user_by_email\") para obtener el id del usuario\n+    const emtemp = sessionStorage.getItem('email');\n+    const url = '${config.API_URL}/user_by_email';\n+    const headers = {\n+      'Content-Type': 'application/json',\n+      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}`\n+    };\n+    const body = JSON.stringify({ email: emtemp });\n+    fetch(url, {\n+      method: 'POST',\n+      headers: headers,\n+      body: body\n+    })\n+      .then(response => response.json())\n+      .then(data => {\n+        console.log('ID del usuario:', data.id);\n+        sessionStorage.setItem('user_id', data.id);\n+        console.log('ID del usuario guardado en sessionStorage:');\n+      })\n+      .catch(error => {\n+        console.error('Error al obtener el ID del usuario:', error);\n+      });\n+  }\n   const features = [\n     {\n       title: 'Autenticación por Voz',\n       description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n"
                },
                {
                    "date": 1746117916041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React from 'react';\n import { useAuth } from '../../context/AuthContext';\n-import { config } from '../../../config';\n+import { config } from \"../../../config\";\n+\n const Home = () => {\n   const { user, logout } = useAuth();\n \n   const fetchObjectId = () => {\n"
                },
                {
                    "date": 1746117935928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React from 'react';\n import { useAuth } from '../../context/AuthContext';\n-import { config } from \"../../../config\";\n+import { config } from \"../../config\";\n \n const Home = () => {\n   const { user, logout } = useAuth();\n \n"
                },
                {
                    "date": 1746118046426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,32 +4,69 @@\n \n const Home = () => {\n   const { user, logout } = useAuth();\n \n-  const fetchObjectId = () => {\n-    //haremos una llamada a la api en la ruta @router.get(\"/user_by_email\") para obtener el id del usuario\n+  const fetchUserId = async () => { // Mejor usar un nombre más descriptivo\n     const emtemp = sessionStorage.getItem('email');\n-    const url = '${config.API_URL}/user_by_email';\n+\n+    if (!emtemp) {\n+        console.error('Error: No se encontró el email en sessionStorage.');\n+        return; // Salir si no hay email\n+    }\n+\n+    // 1. Usar backticks para el template literal y 3. Enviar email como query parameter\n+    const url = `${config.API_URL}/user_by_email?email=${encodeURIComponent(emtemp)}`; // encodeURIComponent para seguridad\n+\n     const headers = {\n-      'Content-Type': 'application/json',\n-      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}`\n+      // 'Content-Type': 'application/json' no es necesario para GET sin body\n+      'Accept': 'application/json', // Indicar que esperas JSON\n+      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista\n     };\n-    const body = JSON.stringify({ email: emtemp });\n-    fetch(url, {\n-      method: 'POST',\n-      headers: headers,\n-      body: body\n-    })\n-      .then(response => response.json())\n-      .then(data => {\n-        console.log('ID del usuario:', data.id);\n-        sessionStorage.setItem('user_id', data.id);\n-        console.log('ID del usuario guardado en sessionStorage:');\n-      })\n-      .catch(error => {\n-        console.error('Error al obtener el ID del usuario:', error);\n-      });\n-  }\n+\n+    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n+    const fetchOptionsFromConfig = {\n+        credentials: 'include',\n+        mode: 'cors',\n+        cache: 'no-cache',\n+        redirect: 'follow',\n+        timeout: 10000 // 10 segundos\n+    };\n+\n+\n+    try {\n+        // 2. Usar el método GET\n+        const response = await fetch(url, {\n+          method: 'GET', // Método GET\n+          headers: headers,\n+          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n+          // NO hay 'body' en una solicitud GET\n+        });\n+\n+        if (!response.ok) {\n+            // Manejar respuestas que no son 2xx (ej: 404, 401)\n+            const errorData = await response.json(); // Intentar leer el error del backend\n+            console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n+            // Opcionalmente, lanzar un error para que sea capturado por el catch\n+             throw new Error(`HTTP error! status: ${response.status}`);\n+        }\n+\n+        const data = await response.json();\n+\n+        // 4. Acceder a data._id\n+        if (data && data._id) {\n+            console.log('ID del usuario:', data._id);\n+            sessionStorage.setItem('user_id', data._id);\n+            console.log('ID del usuario guardado en sessionStorage.');\n+        } else {\n+             console.error('Error: La respuesta de la API no contiene el campo \"_id\".', data);\n+        }\n+\n+    } catch (error) {\n+        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n+    }\n+};\n+\n+\n   const features = [\n     {\n       title: 'Autenticación por Voz',\n       description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n"
                },
                {
                    "date": 1746118167284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,24 @@\n-import React from 'react';\n+import React, { useEffect } from 'react'; // Importa useEffect aquí\n import { useAuth } from '../../context/AuthContext';\n-import { config } from \"../../config\";\n+import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n \n const Home = () => {\n   const { user, logout } = useAuth();\n \n-  const fetchUserId = async () => { // Mejor usar un nombre más descriptivo\n+  // Define la función fetchUserId AQUÍ dentro del componente Home\n+  const fetchUserId = async () => {\n     const emtemp = sessionStorage.getItem('email');\n \n     if (!emtemp) {\n         console.error('Error: No se encontró el email en sessionStorage.');\n         return; // Salir si no hay email\n     }\n \n-    // 1. Usar backticks para el template literal y 3. Enviar email como query parameter\n+    // Usar backticks para el template literal y enviar email como query parameter\n     const url = `${config.API_URL}/user_by_email?email=${encodeURIComponent(emtemp)}`; // encodeURIComponent para seguridad\n \n     const headers = {\n-      // 'Content-Type': 'application/json' no es necesario para GET sin body\n       'Accept': 'application/json', // Indicar que esperas JSON\n       'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista\n     };\n \n@@ -30,11 +30,10 @@\n         redirect: 'follow',\n         timeout: 10000 // 10 segundos\n     };\n \n-\n     try {\n-        // 2. Usar el método GET\n+        // Usar el método GET\n         const response = await fetch(url, {\n           method: 'GET', // Método GET\n           headers: headers,\n           ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n@@ -42,17 +41,18 @@\n         });\n \n         if (!response.ok) {\n             // Manejar respuestas que no son 2xx (ej: 404, 401)\n-            const errorData = await response.json(); // Intentar leer el error del backend\n+            // Intentar leer el error del backend si la respuesta no está vacía\n+            const errorData = response.headers.get('content-length') === '0' ? null : await response.json();\n             console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n             // Opcionalmente, lanzar un error para que sea capturado por el catch\n              throw new Error(`HTTP error! status: ${response.status}`);\n         }\n \n         const data = await response.json();\n \n-        // 4. Acceder a data._id\n+        // Acceder a data._id\n         if (data && data._id) {\n             console.log('ID del usuario:', data._id);\n             sessionStorage.setItem('user_id', data._id);\n             console.log('ID del usuario guardado en sessionStorage.');\n@@ -62,11 +62,17 @@\n \n     } catch (error) {\n         console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n     }\n-};\n+  };\n \n+  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n+  useEffect(() => {\n+    console.log('Componente Home montado. Intentando obtener ID del usuario...');\n+    fetchUserId(); // Llama a la función aquí\n+  }, []); // El array vacío [] asegura que esto solo se ejecute una vez al montar\n \n+\n   const features = [\n     {\n       title: 'Autenticación por Voz',\n       description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n@@ -186,5 +192,5 @@\n     </div>\n   );\n };\n \n-export default Home; \n\\ No newline at end of file\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746118748225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,284 @@\n+import React, { useEffect, useState } from 'react'; // Importa useState aquí\n+import { useAuth } from '../../context/AuthContext';\n+import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n+\n+const Home = () => {\n+  const { user, logout } = useAuth();\n+\n+  // --- NUEVOS ESTADOS para manejar la carga y el error de la llamada fetchUserId ---\n+  const [isLoadingUserId, setIsLoadingUserId] = useState(true); // Inicialmente cargando porque se llama en useEffect\n+  const [userIdError, setUserIdError] = useState(null); // Para almacenar el error si falla la llamada\n+  // --- FIN NUEVOS ESTADOS ---\n+\n+\n+  // Define la función fetchUserId AQUÍ dentro del componente Home\n+  const fetchUserId = async () => {\n+    // --- NUEVO: Iniciar indicador de carga y limpiar error anterior ---\n+    setIsLoadingUserId(true);\n+    setUserIdError(null);\n+    // --- FIN NUEVO ---\n+\n+\n+    const emtemp = sessionStorage.getItem('email');\n+\n+    if (!emtemp) {\n+        console.error('Error: No se encontró el email en sessionStorage.');\n+        // --- NUEVO: Establecer estado de error si no hay email ---\n+        setUserIdError('Error de autenticación: Email no encontrado.');\n+        setIsLoadingUserId(false); // Termina la carga\n+        // --- FIN NUEVO ---\n+        return; // Salir si no hay email\n+    }\n+\n+    // Usar backticks para el template literal y enviar email como query parameter\n+    const url = `${config.API_URL}/user_by_email?email=${encodeURIComponent(emtemp)}`; // encodeURIComponent para seguridad\n+\n+    const headers = {\n+      'Accept': 'application/json', // Indicar que esperas JSON\n+      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista\n+    };\n+\n+    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n+    const fetchOptionsFromConfig = {\n+        credentials: 'include',\n+        mode: 'cors',\n+        cache: 'no-cache',\n+        redirect: 'follow',\n+        // timeout: 10000 // El timeout en fetch nativo no existe así, esto es más para librerías\n+                       // Si tu config.js realmente tiene un timeout para fetch nativo, ignora este comentario.\n+    };\n+\n+    try {\n+        // Usar el método GET\n+        const response = await fetch(url, {\n+          method: 'GET', // Método GET\n+          headers: headers,\n+          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n+          // NO hay 'body' en una solicitud GET\n+        });\n+\n+        if (!response.ok) {\n+            // Manejar respuestas que no son 2xx (ej: 404, 401, 500)\n+            console.error(`Error HTTP al obtener el ID del usuario: ${response.status} ${response.statusText}`);\n+            // Intentar leer el error del backend si la respuesta no está vacía\n+            // Leer el cuerpo de la respuesta solo si hay contenido JSON esperado\n+            try {\n+                 const errorData = response.headers.get('content-type')?.includes('application/json') && parseInt(response.headers.get('content-length') || '0') > 0\n+                                ? await response.json()\n+                                : null;\n+                 console.error(\"Detalles del error del backend:\", errorData);\n+                 // --- NUEVO: Establecer estado de error con detalles ---\n+                 setUserIdError(`Error ${response.status}: ${response.statusText}. Detalles: ${errorData ? JSON.stringify(errorData) : 'N/A'}`);\n+                 // --- FIN NUEVO ---\n+\n+            } catch (jsonError) {\n+                 console.error(\"Error al parsear el cuerpo del error:\", jsonError);\n+                 // --- NUEVO: Establecer estado de error sin detalles JSON ---\n+                 setUserIdError(`Error ${response.status}: ${response.statusText}. No se pudieron obtener detalles del error.`);\n+                 // --- FIN NUEVO ---\n+            }\n+\n+             // --- CORRECCIÓN: Eliminado el 'throw new Error' redundante ---\n+             // La lógica del catch general ya manejará si fetch falla antes de response.ok\n+             // Si response.ok es false, ya hemos manejado el error aquí arriba con console.error y setUserIdError\n+             // throw new Error(`HTTP error! status: ${response.status}`); // <--- ESTO FUE ELIMINADO\n+             // --- FIN CORRECCIÓN ---\n+        } else {\n+            // Respuesta exitosa (2xx)\n+            const data = await response.json();\n+\n+            // Acceder a data._id\n+            if (data && data._id) {\n+                console.log('ID del usuario obtenido exitosamente:', data._id);\n+                sessionStorage.setItem('user_id', data._id);\n+                console.log('ID del usuario guardado en sessionStorage.');\n+                 // --- NUEVO: Limpiar error si la llamada fue exitosa ---\n+                 setUserIdError(null);\n+                 // --- FIN NUEVO ---\n+            } else {\n+                 console.error('Error: La respuesta de la API no contiene el campo \"_id\".', data);\n+                 // --- NUEVO: Establecer estado de error si la estructura de datos es incorrecta ---\n+                 setUserIdError('Error: Formato de datos de usuario incorrecto.');\n+                 // --- FIN NUEVO ---\n+            }\n+        }\n+\n+    } catch (error) {\n+        // Este catch captura errores de red (sin respuesta 404/500, ej: servidor caído)\n+        // o errores al intentar parsear JSON si response.ok era true inesperadamente\n+        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n+        // --- NUEVO: Establecer estado de error genérico de fetch ---\n+        setUserIdError(`Error de conexión o fetch fallido: ${error.message}.`);\n+        // --- FIN NUEVO ---\n+    } finally {\n+        // --- NUEVO: Finalizar indicador de carga SIEMPRE al terminar la llamada ---\n+        setIsLoadingUserId(false);\n+        // --- FIN NUEVO ---\n+    }\n+  };\n+\n+  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n+  useEffect(() => {\n+    // Solo intentar obtener el ID si el usuario está logueado (basado en useAuth)\n+    // useAuth probablemente ya redirige si no está logueado, pero es una verificación extra.\n+     if (user) {\n+        console.log('Componente Home montado y usuario detectado. Intentando obtener ID del usuario...');\n+        fetchUserId(); // Llama a la función aquí\n+     } else {\n+         console.log('Componente Home montado pero usuario no detectado. No se intenta obtener ID.');\n+         // --- NUEVO: Si no hay usuario, no hay carga y hay un error de estado ---\n+         setIsLoadingUserId(false);\n+         setUserIdError(\"Usuario no autenticado.\");\n+         // --- FIN NUEVO ---\n+     }\n+  }, [user]); // Añadir 'user' como dependencia. Si el objeto user cambia (ej: de null a logueado), re-ejecutar.\n+\n+\n+  // ... (el array features y el resto del JSX) ...\n+\n+    // Define las features aquí dentro del componente\n+  const features = [\n+    {\n+      title: 'Autenticación por Voz',\n+      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n+        </svg>\n+      )\n+    },\n+    {\n+      title: 'Seguridad Avanzada',\n+      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n+        </svg>\n+      )\n+    },\n+    {\n+      title: 'Acceso Instantáneo',\n+      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n+        </svg>\n+      )\n+    }\n+  ];\n+\n+\n+  return (\n+    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n+      {/* Hero Section */}\n+      <div className=\"relative overflow-hidden\">\n+        <div className=\"max-w-7xl mx-auto\">\n+          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n+            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+              <div className=\"sm:text-center lg:text-left\">\n+                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n+                  <span className=\"block\">Bienvenido,</span>\n+                  {/* --- NUEVO: Mostrar nombre de usuario o indicador de carga/error --- */}\n+                   <span className=\"block text-indigo-600\">\n+                       {isLoadingUserId ? 'Cargando...' : userIdError ? 'Error al cargar usuario' : user?.username}\n+                   </span>\n+                  {/* --- FIN NUEVO --- */}\n+                </h1>\n+                {/* --- NUEVO: Mostrar mensaje de error debajo del título si falla la carga del ID --- */}\n+                {userIdError && <p className=\"mt-2 text-sm text-red-600\">{userIdError}</p>}\n+                 {/* --- FIN NUEVO --- */}\n+\n+                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n+                  Sistema de autenticación biométrica por voz\n+                </p>\n+              </div>\n+\n+              {/* Stats Section - Considerar mostrar 'Cargando' o 'Error' aquí también */}\n+              <div className=\"mt-10\">\n+                {isLoadingUserId ? (\n+                    <p className=\"text-center text-gray-600\">Cargando datos del usuario...</p>\n+                ) : userIdError ? (\n+                    <p className=\"text-center text-red-600\">No se pudieron cargar todos los datos del usuario.</p>\n+                ) : (\n+                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n+                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n+                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{user?.email}</dd> {/* Usar ?. por seguridad */}\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n+                    </div>\n+                  </dl>\n+                )}\n+              </div>\n+            </main>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Features Section */}\n+      {/* Este podría mostrarse siempre o solo si la carga del usuario fue exitosa */}\n+      {!isLoadingUserId && !userIdError && (\n+           <div className=\"py-12 bg-white\">\n+             <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n+               <div className=\"lg:text-center\">\n+                 <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n+                 <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+                   Sistema de Autenticación Avanzado\n+                 </p>\n+                 <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n+                   Descubre las características que hacen único nuestro sistema de autenticación por voz.\n+                 </p>\n+               </div>\n+\n+               <div className=\"mt-10\">\n+                 <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n+                   {features.map((feature) => (\n+                     <div key={feature.title} className=\"relative\">\n+                       <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n+                         {feature.icon}\n+                       </div>\n+                       <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n+                       <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n+                     </div>\n+                   ))}\n+                 </div>\n+               </div>\n+             </div>\n+           </div>\n+       )}\n+\n+\n+      {/* Action Button */}\n+      {/* Este podría mostrarse siempre o solo si la carga del usuario fue exitosa */}\n+       {!isLoadingUserId && !userIdError && (\n+           <div className=\"bg-gray-50\">\n+             <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n+               <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+                 <span className=\"block\">¿Listo para salir?</span>\n+                 <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n+               </h2>\n+               <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n+                 <div className=\"inline-flex rounded-md shadow\">\n+                   <button\n+                     onClick={logout}\n+                     className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n+                   >\n+                     Cerrar Sesión\n+                   </button>\n+                 </div>\n+               </div>\n+             </div>\n+           </div>\n+       )}\n+\n+    </div>\n+  );\n+};\n+\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746119032360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React, { useEffect } from 'react'; // Importa useEffect aquí\n+import { useAuth } from '../../context/AuthContext';\n+import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n+\n+const Home = () => {\n+  // user y logout se asumen que vienen del contexto de autenticación\n+  const { user, logout } = useAuth();\n+\n+  // Define la función fetchUserId AQUÍ dentro del componente Home\n+  const fetchUserId = async () => {\n+    const emtemp = sessionStorage.getItem('email');\n+\n+    if (!emtemp) {\n+        console.error('Error: No se encontró el email en sessionStorage.');\n+        // Aquí podrías redirigir al usuario a la página de login si el email no está en sesión\n+        // navigate('/login'); // Si usas react-router-dom y tienes el hook navigate\n+        return; // Salir si no hay email\n+    }\n+\n+    // CORRECCIÓN DE URL: Añadimos el prefijo '/auth' y usamos backticks para template literal\n+    const url = `${config.API_URL}/auth/user_by_email?email=${encodeURIComponent(emtemp)}`; // <-- AÑADIR /auth aquí y usar backticks\n+\n+    const headers = {\n+      // 'Content-Type': 'application/json' no es necesario para GET sin body\n+      'Accept': 'application/json', // Indicar que esperas JSON\n+      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista en sessionStorage\n+    };\n+\n+    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n+    // Asumiendo que fetchOptionsFromConfig es accesible o definido aquí\n+    const fetchOptionsFromConfig = {\n+        credentials: 'include', // Necesario porque incluyes headers de auth o si usas cookies\n+        mode: 'cors',\n+        cache: 'no-cache',\n+        redirect: 'follow',\n+        timeout: 10000 // 10 segundos\n+    };\n+\n+    try {\n+        // Usar el método GET\n+        const response = await fetch(url, {\n+          method: 'GET', // Método GET\n+          headers: headers,\n+          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n+          // NO hay 'body' en una solicitud GET\n+        });\n+\n+        if (!response.ok) {\n+            // Manejar respuestas que no son 2xx (ej: 404, 401, 500)\n+            // Intentar leer el error del backend si la respuesta no está vacía\n+            const errorData = response.headers.get('content-length') === '0' ? null : await response.json();\n+            console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n+            // Aquí podrías manejar errores específicos, como 401 (No autorizado)\n+            // if (response.status === 401) { logout(); navigate('/login'); } // Ejemplo\n+            throw new Error(`HTTP error! status: ${response.status}`);\n+        }\n+\n+        const data = await response.json();\n+\n+        // Acceder a data._id (campo devuelto por MongoDB)\n+        if (data && data._id) {\n+            console.log('ID del usuario obtenido:', data._id); // Log más específico\n+            sessionStorage.setItem('user_id', data._id);\n+            console.log('ID del usuario guardado en sessionStorage.');\n+        } else {\n+             console.error('Error: La respuesta de la API no contiene el campo \"_id\" o es inválida.', data);\n+        }\n+\n+    } catch (error) {\n+        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n+        // Aquí podrías mostrar un mensaje al usuario o manejar el error de red\n+    }\n+  };\n+\n+  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n+  // El array vacío [] asegura que esto solo se ejecute una vez al montar\n+  useEffect(() => {\n+    console.log('Componente Home montado. Intentando obtener ID del usuario...');\n+    fetchUserId(); // Llama a la función aquí\n+  }, []); // Dependencia vacía: solo se ejecuta al montar\n+\n+  // Datos estáticos para la sección de Características\n+  const features = [\n+    {\n+      title: 'Autenticación por Voz',\n+      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n+        </svg>\n+      )\n+    },\n+    {\n+      title: 'Seguridad Avanzada',\n+      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n+        </svg>\n+      )\n+    },\n+    {\n+      title: 'Acceso Instantáneo',\n+      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n+        </svg>\n+      )\n+    }\n+  ];\n+\n+  // Asegúrate de que 'user' tenga las propiedades 'username' y 'email'\n+  // que esperas recibir de tu contexto o estado de autenticación\n+  const displayUsername = user?.username || 'Usuario'; // Mostrar 'Usuario' si user o username es undefined\n+  const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n+  const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n+\n+  return (\n+    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n+      {/* Hero Section */}\n+      <div className=\"relative overflow-hidden\">\n+        <div className=\"max-w-7xl mx-auto\">\n+          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n+            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+              <div className=\"sm:text-center lg:text-left\">\n+                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n+                  <span className=\"block\">Bienvenido,</span>\n+                  {/* Usar el displayUsername seguro */}\n+                  <span className=\"block text-indigo-600\">{displayUsername}</span>\n+                </h1>\n+                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n+                  Sistema de autenticación biométrica por voz\n+                </p>\n+              </div>\n+\n+              {/* Stats Section */}\n+              <div className=\"mt-10\">\n+                <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n+                  <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n+                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n+                    {/* Usar el displayEmail seguro */}\n+                    <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n+                  </div>\n+                  <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n+                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n+                    <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n+                  </div>\n+                  <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n+                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n+                    <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n+                  </div>\n+                </dl>\n+              </div>\n+            </main>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Features Section */}\n+      <div className=\"py-12 bg-white\">\n+        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n+          <div className=\"lg:text-center\">\n+            <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n+            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+              Sistema de Autenticación Avanzado\n+            </p>\n+            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n+              Descubre las características que hacen único nuestro sistema de autenticación por voz.\n+            </p>\n+          </div>\n+\n+          <div className=\"mt-10\">\n+            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n+              {features.map((feature) => (\n+                <div key={feature.title} className=\"relative\">\n+                  <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n+                    {feature.icon}\n+                  </div>\n+                  <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n+                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n+                </div>\n+              ))}\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Action Button */}\n+      <div className=\"bg-gray-50\">\n+        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n+          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+            <span className=\"block\">¿Listo para salir?</span>\n+            <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n+          </h2>\n+          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n+            <div className=\"inline-flex rounded-md shadow\">\n+              {/* Usar la función de logout segura */}\n+              <button\n+                onClick={logoutFunction}\n+                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n+              >\n+                Cerrar Sesión\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746119149557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n         return; // Salir si no hay email\n     }\n \n     // CORRECCIÓN DE URL: Añadimos el prefijo '/auth' y usamos backticks para template literal\n+    // Asumiendo que config.API_URL es como 'http://localhost:8003' o 'https://dawbackend-production.up.railway.app'\n     const url = `${config.API_URL}/auth/user_by_email?email=${encodeURIComponent(emtemp)}`; // <-- AÑADIR /auth aquí y usar backticks\n \n     const headers = {\n       // 'Content-Type': 'application/json' no es necesario para GET sin body\n@@ -47,15 +48,24 @@\n \n         if (!response.ok) {\n             // Manejar respuestas que no son 2xx (ej: 404, 401, 500)\n             // Intentar leer el error del backend si la respuesta no está vacía\n-            const errorData = response.headers.get('content-length') === '0' ? null : await response.json();\n+            const errorBody = await response.text(); // Leer como texto si json() falla\n+            let errorData = null;\n+            try {\n+                 errorData = JSON.parse(errorBody);\n+            } catch (e) {\n+                 errorData = errorBody; // Si no es JSON, usar el texto\n+            }\n+\n+\n             console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n             // Aquí podrías manejar errores específicos, como 401 (No autorizado)\n             // if (response.status === 401) { logout(); navigate('/login'); } // Ejemplo\n             throw new Error(`HTTP error! status: ${response.status}`);\n         }\n \n+        // Intentar parsear JSON solo si la respuesta fue exitosa\n         const data = await response.json();\n \n         // Acceder a data._id (campo devuelto por MongoDB)\n         if (data && data._id) {\n@@ -209,485 +219,5 @@\n     </div>\n   );\n };\n \n-export default Home;\n-import React, { useEffect, useState } from 'react'; // Importa useState aquí\n-import { useAuth } from '../../context/AuthContext';\n-import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n-\n-const Home = () => {\n-  const { user, logout } = useAuth();\n-\n-  // --- NUEVOS ESTADOS para manejar la carga y el error de la llamada fetchUserId ---\n-  const [isLoadingUserId, setIsLoadingUserId] = useState(true); // Inicialmente cargando porque se llama en useEffect\n-  const [userIdError, setUserIdError] = useState(null); // Para almacenar el error si falla la llamada\n-  // --- FIN NUEVOS ESTADOS ---\n-\n-\n-  // Define la función fetchUserId AQUÍ dentro del componente Home\n-  const fetchUserId = async () => {\n-    // --- NUEVO: Iniciar indicador de carga y limpiar error anterior ---\n-    setIsLoadingUserId(true);\n-    setUserIdError(null);\n-    // --- FIN NUEVO ---\n-\n-\n-    const emtemp = sessionStorage.getItem('email');\n-\n-    if (!emtemp) {\n-        console.error('Error: No se encontró el email en sessionStorage.');\n-        // --- NUEVO: Establecer estado de error si no hay email ---\n-        setUserIdError('Error de autenticación: Email no encontrado.');\n-        setIsLoadingUserId(false); // Termina la carga\n-        // --- FIN NUEVO ---\n-        return; // Salir si no hay email\n-    }\n-\n-    // Usar backticks para el template literal y enviar email como query parameter\n-    const url = `${config.API_URL}/user_by_email?email=${encodeURIComponent(emtemp)}`; // encodeURIComponent para seguridad\n-\n-    const headers = {\n-      'Accept': 'application/json', // Indicar que esperas JSON\n-      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista\n-    };\n-\n-    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n-    const fetchOptionsFromConfig = {\n-        credentials: 'include',\n-        mode: 'cors',\n-        cache: 'no-cache',\n-        redirect: 'follow',\n-        // timeout: 10000 // El timeout en fetch nativo no existe así, esto es más para librerías\n-                       // Si tu config.js realmente tiene un timeout para fetch nativo, ignora este comentario.\n-    };\n-\n-    try {\n-        // Usar el método GET\n-        const response = await fetch(url, {\n-          method: 'GET', // Método GET\n-          headers: headers,\n-          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n-          // NO hay 'body' en una solicitud GET\n-        });\n-\n-        if (!response.ok) {\n-            // Manejar respuestas que no son 2xx (ej: 404, 401, 500)\n-            console.error(`Error HTTP al obtener el ID del usuario: ${response.status} ${response.statusText}`);\n-            // Intentar leer el error del backend si la respuesta no está vacía\n-            // Leer el cuerpo de la respuesta solo si hay contenido JSON esperado\n-            try {\n-                 const errorData = response.headers.get('content-type')?.includes('application/json') && parseInt(response.headers.get('content-length') || '0') > 0\n-                                ? await response.json()\n-                                : null;\n-                 console.error(\"Detalles del error del backend:\", errorData);\n-                 // --- NUEVO: Establecer estado de error con detalles ---\n-                 setUserIdError(`Error ${response.status}: ${response.statusText}. Detalles: ${errorData ? JSON.stringify(errorData) : 'N/A'}`);\n-                 // --- FIN NUEVO ---\n-\n-            } catch (jsonError) {\n-                 console.error(\"Error al parsear el cuerpo del error:\", jsonError);\n-                 // --- NUEVO: Establecer estado de error sin detalles JSON ---\n-                 setUserIdError(`Error ${response.status}: ${response.statusText}. No se pudieron obtener detalles del error.`);\n-                 // --- FIN NUEVO ---\n-            }\n-\n-             // --- CORRECCIÓN: Eliminado el 'throw new Error' redundante ---\n-             // La lógica del catch general ya manejará si fetch falla antes de response.ok\n-             // Si response.ok es false, ya hemos manejado el error aquí arriba con console.error y setUserIdError\n-             // throw new Error(`HTTP error! status: ${response.status}`); // <--- ESTO FUE ELIMINADO\n-             // --- FIN CORRECCIÓN ---\n-        } else {\n-            // Respuesta exitosa (2xx)\n-            const data = await response.json();\n-\n-            // Acceder a data._id\n-            if (data && data._id) {\n-                console.log('ID del usuario obtenido exitosamente:', data._id);\n-                sessionStorage.setItem('user_id', data._id);\n-                console.log('ID del usuario guardado en sessionStorage.');\n-                 // --- NUEVO: Limpiar error si la llamada fue exitosa ---\n-                 setUserIdError(null);\n-                 // --- FIN NUEVO ---\n-            } else {\n-                 console.error('Error: La respuesta de la API no contiene el campo \"_id\".', data);\n-                 // --- NUEVO: Establecer estado de error si la estructura de datos es incorrecta ---\n-                 setUserIdError('Error: Formato de datos de usuario incorrecto.');\n-                 // --- FIN NUEVO ---\n-            }\n-        }\n-\n-    } catch (error) {\n-        // Este catch captura errores de red (sin respuesta 404/500, ej: servidor caído)\n-        // o errores al intentar parsear JSON si response.ok era true inesperadamente\n-        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n-        // --- NUEVO: Establecer estado de error genérico de fetch ---\n-        setUserIdError(`Error de conexión o fetch fallido: ${error.message}.`);\n-        // --- FIN NUEVO ---\n-    } finally {\n-        // --- NUEVO: Finalizar indicador de carga SIEMPRE al terminar la llamada ---\n-        setIsLoadingUserId(false);\n-        // --- FIN NUEVO ---\n-    }\n-  };\n-\n-  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n-  useEffect(() => {\n-    // Solo intentar obtener el ID si el usuario está logueado (basado en useAuth)\n-    // useAuth probablemente ya redirige si no está logueado, pero es una verificación extra.\n-     if (user) {\n-        console.log('Componente Home montado y usuario detectado. Intentando obtener ID del usuario...');\n-        fetchUserId(); // Llama a la función aquí\n-     } else {\n-         console.log('Componente Home montado pero usuario no detectado. No se intenta obtener ID.');\n-         // --- NUEVO: Si no hay usuario, no hay carga y hay un error de estado ---\n-         setIsLoadingUserId(false);\n-         setUserIdError(\"Usuario no autenticado.\");\n-         // --- FIN NUEVO ---\n-     }\n-  }, [user]); // Añadir 'user' como dependencia. Si el objeto user cambia (ej: de null a logueado), re-ejecutar.\n-\n-\n-  // ... (el array features y el resto del JSX) ...\n-\n-    // Define las features aquí dentro del componente\n-  const features = [\n-    {\n-      title: 'Autenticación por Voz',\n-      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n-        </svg>\n-      )\n-    },\n-    {\n-      title: 'Seguridad Avanzada',\n-      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n-        </svg>\n-      )\n-    },\n-    {\n-      title: 'Acceso Instantáneo',\n-      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n-        </svg>\n-      )\n-    }\n-  ];\n-\n-\n-  return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n-      {/* Hero Section */}\n-      <div className=\"relative overflow-hidden\">\n-        <div className=\"max-w-7xl mx-auto\">\n-          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n-              <div className=\"sm:text-center lg:text-left\">\n-                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n-                  <span className=\"block\">Bienvenido,</span>\n-                  {/* --- NUEVO: Mostrar nombre de usuario o indicador de carga/error --- */}\n-                   <span className=\"block text-indigo-600\">\n-                       {isLoadingUserId ? 'Cargando...' : userIdError ? 'Error al cargar usuario' : user?.username}\n-                   </span>\n-                  {/* --- FIN NUEVO --- */}\n-                </h1>\n-                {/* --- NUEVO: Mostrar mensaje de error debajo del título si falla la carga del ID --- */}\n-                {userIdError && <p className=\"mt-2 text-sm text-red-600\">{userIdError}</p>}\n-                 {/* --- FIN NUEVO --- */}\n-\n-                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n-                  Sistema de autenticación biométrica por voz\n-                </p>\n-              </div>\n-\n-              {/* Stats Section - Considerar mostrar 'Cargando' o 'Error' aquí también */}\n-              <div className=\"mt-10\">\n-                {isLoadingUserId ? (\n-                    <p className=\"text-center text-gray-600\">Cargando datos del usuario...</p>\n-                ) : userIdError ? (\n-                    <p className=\"text-center text-red-600\">No se pudieron cargar todos los datos del usuario.</p>\n-                ) : (\n-                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n-                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n-                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{user?.email}</dd> {/* Usar ?. por seguridad */}\n-                    </div>\n-                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n-                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n-                    </div>\n-                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n-                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n-                    </div>\n-                  </dl>\n-                )}\n-              </div>\n-            </main>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Features Section */}\n-      {/* Este podría mostrarse siempre o solo si la carga del usuario fue exitosa */}\n-      {!isLoadingUserId && !userIdError && (\n-           <div className=\"py-12 bg-white\">\n-             <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n-               <div className=\"lg:text-center\">\n-                 <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n-                 <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-                   Sistema de Autenticación Avanzado\n-                 </p>\n-                 <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n-                   Descubre las características que hacen único nuestro sistema de autenticación por voz.\n-                 </p>\n-               </div>\n-\n-               <div className=\"mt-10\">\n-                 <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n-                   {features.map((feature) => (\n-                     <div key={feature.title} className=\"relative\">\n-                       <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n-                         {feature.icon}\n-                       </div>\n-                       <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n-                       <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n-                     </div>\n-                   ))}\n-                 </div>\n-               </div>\n-             </div>\n-           </div>\n-       )}\n-\n-\n-      {/* Action Button */}\n-      {/* Este podría mostrarse siempre o solo si la carga del usuario fue exitosa */}\n-       {!isLoadingUserId && !userIdError && (\n-           <div className=\"bg-gray-50\">\n-             <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n-               <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-                 <span className=\"block\">¿Listo para salir?</span>\n-                 <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n-               </h2>\n-               <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n-                 <div className=\"inline-flex rounded-md shadow\">\n-                   <button\n-                     onClick={logout}\n-                     className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n-                   >\n-                     Cerrar Sesión\n-                   </button>\n-                 </div>\n-               </div>\n-             </div>\n-           </div>\n-       )}\n-\n-    </div>\n-  );\n-};\n-\n-export default Home;\n-import React, { useEffect } from 'react'; // Importa useEffect aquí\n-import { useAuth } from '../../context/AuthContext';\n-import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n-\n-const Home = () => {\n-  const { user, logout } = useAuth();\n-\n-  // Define la función fetchUserId AQUÍ dentro del componente Home\n-  const fetchUserId = async () => {\n-    const emtemp = sessionStorage.getItem('email');\n-\n-    if (!emtemp) {\n-        console.error('Error: No se encontró el email en sessionStorage.');\n-        return; // Salir si no hay email\n-    }\n-\n-    // Usar backticks para el template literal y enviar email como query parameter\n-    const url = `${config.API_URL}/user_by_email?email=${encodeURIComponent(emtemp)}`; // encodeURIComponent para seguridad\n-\n-    const headers = {\n-      'Accept': 'application/json', // Indicar que esperas JSON\n-      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista\n-    };\n-\n-    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n-    const fetchOptionsFromConfig = {\n-        credentials: 'include',\n-        mode: 'cors',\n-        cache: 'no-cache',\n-        redirect: 'follow',\n-        timeout: 10000 // 10 segundos\n-    };\n-\n-    try {\n-        // Usar el método GET\n-        const response = await fetch(url, {\n-          method: 'GET', // Método GET\n-          headers: headers,\n-          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n-          // NO hay 'body' en una solicitud GET\n-        });\n-\n-        if (!response.ok) {\n-            // Manejar respuestas que no son 2xx (ej: 404, 401)\n-            // Intentar leer el error del backend si la respuesta no está vacía\n-            const errorData = response.headers.get('content-length') === '0' ? null : await response.json();\n-            console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n-            // Opcionalmente, lanzar un error para que sea capturado por el catch\n-             throw new Error(`HTTP error! status: ${response.status}`);\n-        }\n-\n-        const data = await response.json();\n-\n-        // Acceder a data._id\n-        if (data && data._id) {\n-            console.log('ID del usuario:', data._id);\n-            sessionStorage.setItem('user_id', data._id);\n-            console.log('ID del usuario guardado en sessionStorage.');\n-        } else {\n-             console.error('Error: La respuesta de la API no contiene el campo \"_id\".', data);\n-        }\n-\n-    } catch (error) {\n-        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n-    }\n-  };\n-\n-  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n-  useEffect(() => {\n-    console.log('Componente Home montado. Intentando obtener ID del usuario...');\n-    fetchUserId(); // Llama a la función aquí\n-  }, []); // El array vacío [] asegura que esto solo se ejecute una vez al montar\n-\n-\n-  const features = [\n-    {\n-      title: 'Autenticación por Voz',\n-      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n-        </svg>\n-      )\n-    },\n-    {\n-      title: 'Seguridad Avanzada',\n-      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n-        </svg>\n-      )\n-    },\n-    {\n-      title: 'Acceso Instantáneo',\n-      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n-        </svg>\n-      )\n-    }\n-  ];\n-\n-  return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n-      {/* Hero Section */}\n-      <div className=\"relative overflow-hidden\">\n-        <div className=\"max-w-7xl mx-auto\">\n-          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n-              <div className=\"sm:text-center lg:text-left\">\n-                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n-                  <span className=\"block\">Bienvenido,</span>\n-                  <span className=\"block text-indigo-600\">{user.username}</span>\n-                </h1>\n-                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n-                  Sistema de autenticación biométrica por voz\n-                </p>\n-              </div>\n-\n-              {/* Stats Section */}\n-              <div className=\"mt-10\">\n-                <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n-                  <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n-                    <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{user.email}</dd>\n-                  </div>\n-                  <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n-                    <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n-                  </div>\n-                  <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n-                    <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n-                  </div>\n-                </dl>\n-              </div>\n-            </main>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Features Section */}\n-      <div className=\"py-12 bg-white\">\n-        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n-          <div className=\"lg:text-center\">\n-            <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n-            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-              Sistema de Autenticación Avanzado\n-            </p>\n-            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n-              Descubre las características que hacen único nuestro sistema de autenticación por voz.\n-            </p>\n-          </div>\n-\n-          <div className=\"mt-10\">\n-            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n-              {features.map((feature) => (\n-                <div key={feature.title} className=\"relative\">\n-                  <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n-                    {feature.icon}\n-                  </div>\n-                  <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n-                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n-                </div>\n-              ))}\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Action Button */}\n-      <div className=\"bg-gray-50\">\n-        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n-          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-            <span className=\"block\">¿Listo para salir?</span>\n-            <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n-          </h2>\n-          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n-            <div className=\"inline-flex rounded-md shadow\">\n-              <button\n-                onClick={logout}\n-                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n-              >\n-                Cerrar Sesión\n-              </button>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-};\n-\n export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746120859142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useEffect } from 'react'; // Importa useEffect aquí\n import { useAuth } from '../../context/AuthContext';\n import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n+import Sidebar from '../../components/Sidebar'; // <-- Importa el componente Sidebar aquí (ajusta la ruta si es necesario)\n \n const Home = () => {\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n@@ -126,98 +127,116 @@\n   const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n   const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n \n   return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n-      {/* Hero Section */}\n-      <div className=\"relative overflow-hidden\">\n-        <div className=\"max-w-7xl mx-auto\">\n-          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n-              <div className=\"sm:text-center lg:text-left\">\n-                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n-                  <span className=\"block\">Bienvenido,</span>\n-                  {/* Usar el displayUsername seguro */}\n-                  <span className=\"block text-indigo-600\">{displayUsername}</span>\n-                </h1>\n-                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n-                  Sistema de autenticación biométrica por voz\n-                </p>\n-              </div>\n+    // Contenedor principal que usa flexbox para la barra lateral y el contenido\n+    <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n+      {/* Sidebar - Se coloca a la izquierda */}\n+      {/* Ajusta el ancho (w-64) y el fondo (bg-gray-800) según el diseño de tu Sidebar */}\n+      {/* Asegúrate de pasar las props necesarias a Sidebar (ej: user, logout) */}\n+      {/* Asumiendo que tu componente SideBar en Componentes-Iniciado es el mismo que Sidebar */}\n+      <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n \n-              {/* Stats Section */}\n-              <div className=\"mt-10\">\n-                <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n-                  <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n-                    {/* Usar el displayEmail seguro */}\n-                    <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n-                  </div>\n-                  <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n-                    <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n-                  </div>\n-                  <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n-                    <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n-                  </div>\n-                </dl>\n-              </div>\n-            </main>\n+      {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n+      {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n+      <div className=\"flex-1\">\n+        {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n+        {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n+\n+        {/* Hero Section */}\n+        <div className=\"relative overflow-hidden\">\n+          <div className=\"max-w-7xl mx-auto\">\n+            {/* Ajusta el padding izquierdo (pl-4 sm:pl-6 md:pl-8 lg:pl-8 xl:pl-8) para que no se solape con la sidebar */}\n+            <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n+              <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+                <div className=\"sm:text-center lg:text-left\">\n+                  <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n+                    <span className=\"block\">Bienvenido,</span>\n+                    {/* Usar el displayUsername seguro */}\n+                    <span className=\"block text-indigo-600\">{displayUsername}</span>\n+                  </h1>\n+                  <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n+                    Sistema de autenticación biométrica por voz\n+                  </p>\n+                </div>\n+\n+                {/* Stats Section */}\n+                <div className=\"mt-10\">\n+                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n+                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n+                      {/* Usar el displayEmail seguro */}\n+                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n+                    </div>\n+                  </dl>\n+                </div>\n+              </main>\n+            </div>\n           </div>\n         </div>\n-      </div>\n \n-      {/* Features Section */}\n-      <div className=\"py-12 bg-white\">\n-        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n-          <div className=\"lg:text-center\">\n\\ No newline at end of file\n-            <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n-            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-              Sistema de Autenticación Avanzado\n-            </p>\n-            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n-              Descubre las características que hacen único nuestro sistema de autenticación por voz.\n-            </p>\n-          </div>\n+        {/* Features Section */}\n+        <div className=\"py-12 bg-white\">\n+          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n+            <div className=\"lg:text-center\">\n+              <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n+              <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+                Sistema de Autenticación Avanzado\n+              </p>\n+              <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n+                Descubre las características que hacen único nuestro sistema de autenticación por voz.\n+              </p>\n+            </div>\n \n-          <div className=\"mt-10\">\n-            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n-              {features.map((feature) => (\n-                <div key={feature.title} className=\"relative\">\n-                  <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n-                    {feature.icon}\n+            <div className=\"mt-10\">\n+              <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n+                {features.map((feature) => (\n+                  <div key={feature.title} className=\"relative\">\n+                    <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n+                      {feature.icon}\n+                    </div>\n+                    <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n+                    <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n                   </div>\n-                  <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n-                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n-                </div>\n-              ))}\n+                ))}\n+              </div>\n             </div>\n           </div>\n         </div>\n-      </div>\n \n-      {/* Action Button */}\n-      <div className=\"bg-gray-50\">\n-        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n-          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-            <span className=\"block\">¿Listo para salir?</span>\n-            <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n-          </h2>\n-          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n-            <div className=\"inline-flex rounded-md shadow\">\n-              {/* Usar la función de logout segura */}\n-              <button\n-                onClick={logoutFunction}\n-                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n-              >\n-                Cerrar Sesión\n-              </button>\n+        {/* Action Button */}\n+        <div className=\"bg-gray-50\">\n+          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n+            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+              <span className=\"block\">¿Listo para salir?</span>\n+              <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n+            </h2>\n+            <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n+              <div className=\"inline-flex rounded-md shadow\">\n+                {/* Usar la función de logout segura */}\n+                <button\n+                  onClick={logoutFunction}\n+                  className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n+                >\n+                  Cerrar Sesión\n+                </button>\n+              </div>\n             </div>\n           </div>\n         </div>\n-      </div>\n-    </div>\n+\n+        {/* La sección del asistente de programación ha sido eliminada */}\n+\n+      </div> {/* Cierre del contenedor del contenido principal */}\n+    </div> // Cierre del contenedor flex principal\n   );\n };\n \n-export default Home;\n+export default Home;\n"
                },
                {
                    "date": 1746120879360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect } from 'react'; // Importa useEffect aquí\n import { useAuth } from '../../context/AuthContext';\n import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n-import Sidebar from '../../components/Sidebar'; // <-- Importa el componente Sidebar aquí (ajusta la ruta si es necesario)\n+import SideBar from './Componentes-Iniciado/SideBar';\n \n const Home = () => {\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n"
                },
                {
                    "date": 1746120923111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import React, { useEffect } from 'react'; // Importa useEffect aquí\n import { useAuth } from '../../context/AuthContext';\n import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n-import SideBar from './Componentes-Iniciado/SideBar';\n \n const Home = () => {\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n@@ -127,116 +126,98 @@\n   const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n   const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n \n   return (\n-    // Contenedor principal que usa flexbox para la barra lateral y el contenido\n-    <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n-      {/* Sidebar - Se coloca a la izquierda */}\n-      {/* Ajusta el ancho (w-64) y el fondo (bg-gray-800) según el diseño de tu Sidebar */}\n-      {/* Asegúrate de pasar las props necesarias a Sidebar (ej: user, logout) */}\n-      {/* Asumiendo que tu componente SideBar en Componentes-Iniciado es el mismo que Sidebar */}\n-      <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n+    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n+      {/* Hero Section */}\n+      <div className=\"relative overflow-hidden\">\n+        <div className=\"max-w-7xl mx-auto\">\n+          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n+            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+              <div className=\"sm:text-center lg:text-left\">\n+                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n+                  <span className=\"block\">Bienvenido,</span>\n+                  {/* Usar el displayUsername seguro */}\n+                  <span className=\"block text-indigo-600\">{displayUsername}</span>\n+                </h1>\n+                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n+                  Sistema de autenticación biométrica por voz\n+                </p>\n+              </div>\n \n-      {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n-      {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n-      <div className=\"flex-1\">\n-        {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n-        {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n-\n-        {/* Hero Section */}\n-        <div className=\"relative overflow-hidden\">\n-          <div className=\"max-w-7xl mx-auto\">\n-            {/* Ajusta el padding izquierdo (pl-4 sm:pl-6 md:pl-8 lg:pl-8 xl:pl-8) para que no se solape con la sidebar */}\n-            <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-              <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n-                <div className=\"sm:text-center lg:text-left\">\n-                  <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n-                    <span className=\"block\">Bienvenido,</span>\n-                    {/* Usar el displayUsername seguro */}\n-                    <span className=\"block text-indigo-600\">{displayUsername}</span>\n-                  </h1>\n-                  <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n-                    Sistema de autenticación biométrica por voz\n-                  </p>\n-                </div>\n-\n-                {/* Stats Section */}\n-                <div className=\"mt-10\">\n-                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n-                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n-                      {/* Usar el displayEmail seguro */}\n-                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n-                    </div>\n-                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n-                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n-                    </div>\n-                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n-                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n-                    </div>\n-                  </dl>\n-                </div>\n-              </main>\n-            </div>\n+              {/* Stats Section */}\n+              <div className=\"mt-10\">\n+                <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n+                  <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n+                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n+                    {/* Usar el displayEmail seguro */}\n+                    <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n+                  </div>\n+                  <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n+                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n+                    <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n+                  </div>\n+                  <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n+                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n+                    <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n+                  </div>\n+                </dl>\n+              </div>\n+            </main>\n           </div>\n         </div>\n+      </div>\n \n-        {/* Features Section */}\n-        <div className=\"py-12 bg-white\">\n-          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n-            <div className=\"lg:text-center\">\n-              <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n-              <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-                Sistema de Autenticación Avanzado\n-              </p>\n-              <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n-                Descubre las características que hacen único nuestro sistema de autenticación por voz.\n-              </p>\n-            </div>\n+      {/* Features Section */}\n+      <div className=\"py-12 bg-white\">\n+        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n+          <div className=\"lg:text-center\">\n+            <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n+            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+              Sistema de Autenticación Avanzado\n+            </p>\n+            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n+              Descubre las características que hacen único nuestro sistema de autenticación por voz.\n+            </p>\n+          </div>\n \n-            <div className=\"mt-10\">\n-              <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n-                {features.map((feature) => (\n-                  <div key={feature.title} className=\"relative\">\n-                    <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n-                      {feature.icon}\n-                    </div>\n-                    <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n-                    <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n+          <div className=\"mt-10\">\n+            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n+              {features.map((feature) => (\n+                <div key={feature.title} className=\"relative\">\n+                  <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n+                    {feature.icon}\n                   </div>\n-                ))}\n-              </div>\n+                  <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n+                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n+                </div>\n+              ))}\n             </div>\n           </div>\n         </div>\n+      </div>\n \n-        {/* Action Button */}\n-        <div className=\"bg-gray-50\">\n-          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n-            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-              <span className=\"block\">¿Listo para salir?</span>\n-              <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n-            </h2>\n-            <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n-              <div className=\"inline-flex rounded-md shadow\">\n-                {/* Usar la función de logout segura */}\n-                <button\n-                  onClick={logoutFunction}\n-                  className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n-                >\n-                  Cerrar Sesión\n-                </button>\n-              </div>\n+      {/* Action Button */}\n+      <div className=\"bg-gray-50\">\n+        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n+          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+            <span className=\"block\">¿Listo para salir?</span>\n+            <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n+          </h2>\n+          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n+            <div className=\"inline-flex rounded-md shadow\">\n+              {/* Usar la función de logout segura */}\n+              <button\n+                onClick={logoutFunction}\n+                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n+              >\n+                Cerrar Sesión\n+              </button>\n             </div>\n           </div>\n         </div>\n-\n-        {/* La sección del asistente de programación ha sido eliminada */}\n-\n-      </div> {/* Cierre del contenedor del contenido principal */}\n-    </div> // Cierre del contenedor flex principal\n+      </div>\n+    </div>\n   );\n };\n \n-export default Home;\n+export default Home;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746121046463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,11 @@\n import React, { useEffect } from 'react'; // Importa useEffect aquí\n import { useAuth } from '../../context/AuthContext';\n import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n+// Importa el componente Sidebar. Ajusta la ruta según la ubicación real de tu archivo Sidebar.jsx\n+// Si Sidebar está en la misma carpeta que MiComponenteBasico (ej: src/pages/LoggedIn/Componentes-Iniciado/SideBar.jsx)\n+// y Home.jsx está en src/pages/LoggedIn/, la ruta relativa sería './Componentes-Iniciado/SideBar'\n+import Sidebar from './Componentes-Iniciado/SideBar'; // <-- Ajusta esta ruta si es necesario\n \n const Home = () => {\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n@@ -126,98 +130,115 @@\n   const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n   const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n \n   return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n-      {/* Hero Section */}\n-      <div className=\"relative overflow-hidden\">\n-        <div className=\"max-w-7xl mx-auto\">\n-          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n-              <div className=\"sm:text-center lg:text-left\">\n-                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n-                  <span className=\"block\">Bienvenido,</span>\n-                  {/* Usar el displayUsername seguro */}\n-                  <span className=\"block text-indigo-600\">{displayUsername}</span>\n-                </h1>\n-                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n-                  Sistema de autenticación biométrica por voz\n-                </p>\n-              </div>\n+    // Contenedor principal que usa flexbox para la barra lateral y el contenido\n+    // min-h-screen asegura que ocupe al menos la altura completa de la pantalla\n+    <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n+      {/* Sidebar - Se coloca a la izquierda */}\n+      {/* Asegúrate de pasar las props necesarias a Sidebar (ej: user, logout) */}\n+      {/* Ajusta el ancho (ej: w-64) y el fondo (ej: bg-gray-800) dentro del componente Sidebar o aquí si prefieres */}\n+      <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n \n-              {/* Stats Section */}\n-              <div className=\"mt-10\">\n-                <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n-                  <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n-                    {/* Usar el displayEmail seguro */}\n-                    <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n-                  </div>\n-                  <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n-                    <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n-                  </div>\n-                  <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n-                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n-                    <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n-                  </div>\n-                </dl>\n-              </div>\n-            </main>\n+      {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n+      {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n+      <div className=\"flex-1\">\n+        {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n+        {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n+\n+        {/* Hero Section */}\n+        <div className=\"relative overflow-hidden\">\n+          <div className=\"max-w-7xl mx-auto\">\n+            {/* Ajusta el padding izquierdo (pl-4 sm:pl-6 md:pl-8 lg:pl-8 xl:pl-8) para que no se solape con la sidebar */}\n+            {/* Considera añadir un ml-[sidebar-width] al contenido principal si la sidebar es fija */}\n+            <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n+              <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+                <div className=\"sm:text-center lg:text-left\">\n+                  <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n+                    <span className=\"block\">Bienvenido,</span>\n+                    {/* Usar el displayUsername seguro */}\n+                    <span className=\"block text-indigo-600\">{displayUsername}</span>\n+                  </h1>\n+                  <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n+                    Sistema de autenticación biométrica por voz\n+                  </p>\n+                </div>\n+\n+                {/* Stats Section */}\n+                <div className=\"mt-10\">\n+                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n+                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n+                      {/* Usar el displayEmail seguro */}\n+                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n+                    </div>\n+                  </dl>\n+                </div>\n+              </main>\n+            </div>\n           </div>\n         </div>\n-      </div>\n \n-      {/* Features Section */}\n-      <div className=\"py-12 bg-white\">\n-        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n\\ No newline at end of file\n-          <div className=\"lg:text-center\">\n-            <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n-            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-              Sistema de Autenticación Avanzado\n-            </p>\n-            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n-              Descubre las características que hacen único nuestro sistema de autenticación por voz.\n-            </p>\n-          </div>\n+        {/* Features Section */}\n+        <div className=\"py-12 bg-white\">\n+          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n+            <div className=\"lg:text-center\">\n+              <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n+              <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+                Sistema de Autenticación Avanzado\n+              </p>\n+              <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n+                Descubre las características que hacen único nuestro sistema de autenticación por voz.\n+              </p>\n+            </div>\n \n-          <div className=\"mt-10\">\n-            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n-              {features.map((feature) => (\n-                <div key={feature.title} className=\"relative\">\n-                  <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n-                    {feature.icon}\n+            <div className=\"mt-10\">\n+              <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n+                {features.map((feature) => (\n+                  <div key={feature.title} className=\"relative\">\n+                    <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n+                      {feature.icon}\n+                    </div>\n+                    <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n+                    <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n                   </div>\n-                  <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n-                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n-                </div>\n-              ))}\n+                ))}\n+              </div>\n             </div>\n           </div>\n         </div>\n-      </div>\n \n-      {/* Action Button */}\n-      <div className=\"bg-gray-50\">\n-        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n-          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-            <span className=\"block\">¿Listo para salir?</span>\n-            <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n-          </h2>\n-          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n-            <div className=\"inline-flex rounded-md shadow\">\n-              {/* Usar la función de logout segura */}\n-              <button\n-                onClick={logoutFunction}\n-                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n-              >\n-                Cerrar Sesión\n-              </button>\n+        {/* Action Button */}\n+        <div className=\"bg-gray-50\">\n+          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n+            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+              <span className=\"block\">¿Listo para salir?</span>\n+              <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n+            </h2>\n+            <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n+              <div className=\"inline-flex rounded-md shadow\">\n+                {/* Usar la función de logout segura */}\n+                <button\n+                  onClick={logoutFunction}\n+                  className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n+                >\n+                  Cerrar Sesión\n+                </button>\n+              </div>\n             </div>\n           </div>\n         </div>\n-      </div>\n-    </div>\n+\n+      </div> {/* Cierre del contenedor del contenido principal */}\n+    </div> // Cierre del contenedor flex principal\n   );\n };\n \n-export default Home;\n+export default Home;\n"
                },
                {
                    "date": 1746121450327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n       <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n \n       {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n       {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n-      <div className=\"flex-1\">\n+      <div className=\"flex-1 min-w-0\">\n         {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n         {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n \n         {/* Hero Section */}\n"
                },
                {
                    "date": 1746121592333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React, { useEffect } from 'react'; // Importa useEffect aquí\n+import { useAuth } from '../../context/AuthContext';\n+import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n+// Importa el componente Sidebar. Ajusta la ruta según la ubicación real de tu archivo Sidebar.jsx\n+// Si Sidebar está en la misma carpeta que MiComponenteBasico (ej: src/pages/LoggedIn/Componentes-Iniciado/SideBar.jsx)\n+// y Home.jsx está en src/pages/LoggedIn/, la ruta relativa sería './Componentes-Iniciado/SideBar'\n+import Sidebar from './Componentes-Iniciado/SideBar'; // <-- Ajusta esta ruta si es necesario\n+\n+const Home = () => {\n+  // user y logout se asumen que vienen del contexto de autenticación\n+  const { user, logout } = useAuth();\n+\n+  // Define la función fetchUserId AQUÍ dentro del componente Home\n+  const fetchUserId = async () => {\n+    const emtemp = sessionStorage.getItem('email');\n+\n+    if (!emtemp) {\n+        console.error('Error: No se encontró el email en sessionStorage.');\n+        // Aquí podrías redirigir al usuario a la página de login si el email no está en sesión\n+        // navigate('/login'); // Si usas react-router-dom y tienes el hook navigate\n+        return; // Salir si no hay email\n+    }\n+\n+    // CORRECCIÓN DE URL: Añadimos el prefijo '/auth' y usamos backticks para template literal\n+    // Asumiendo que config.API_URL es como 'http://localhost:8003' o 'https://dawbackend-production.up.railway.app'\n+    const url = `${config.API_URL}/auth/user_by_email?email=${encodeURIComponent(emtemp)}`; // <-- AÑADIR /auth aquí y usar backticks\n+\n+    const headers = {\n+      // 'Content-Type': 'application/json' no es necesario para GET sin body\n+      'Accept': 'application/json', // Indicar que esperas JSON\n+      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista en sessionStorage\n+    };\n+\n+    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n+    // Asumiendo que fetchOptionsFromConfig es accesible o definido aquí\n+    const fetchOptionsFromConfig = {\n+        credentials: 'include', // Necesario porque incluyes headers de auth o si usas cookies\n+        mode: 'cors',\n+        cache: 'no-cache',\n+        redirect: 'follow',\n+        timeout: 10000 // 10 segundos\n+    };\n+\n+    try {\n+        // Usar el método GET\n+        const response = await fetch(url, {\n+          method: 'GET', // Método GET\n+          headers: headers,\n+          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n+          // NO hay 'body' en una solicitud GET\n+        });\n+\n+        if (!response.ok) {\n+            // Manejar respuestas que no son 2xx (ej: 404, 401, 500)\n+            // Intentar leer el error del backend si la respuesta no está vacía\n+            const errorBody = await response.text(); // Leer como texto si json() falla\n+            let errorData = null;\n+            try {\n+                 errorData = JSON.parse(errorBody);\n+            } catch (e) {\n+                 errorData = errorBody; // Si no es JSON, usar el texto\n+            }\n+\n+\n+            console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n+            // Aquí podrías manejar errores específicos, como 401 (No autorizado)\n+            // if (response.status === 401) { logout(); navigate('/login'); } // Ejemplo\n+            throw new Error(`HTTP error! status: ${response.status}`);\n+        }\n+\n+        // Intentar parsear JSON solo si la respuesta fue exitosa\n+        const data = await response.json();\n+\n+        // Acceder a data._id (campo devuelto por MongoDB)\n+        if (data && data._id) {\n+            console.log('ID del usuario obtenido:', data._id); // Log más específico\n+            sessionStorage.setItem('user_id', data._id);\n+            console.log('ID del usuario guardado en sessionStorage.');\n+        } else {\n+             console.error('Error: La respuesta de la API no contiene el campo \"_id\" o es inválida.', data);\n+        }\n+\n+    } catch (error) {\n+        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n+        // Aquí podrías mostrar un mensaje al usuario o manejar el error de red\n+    }\n+  };\n+\n+  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n+  // El array vacío [] asegura que esto solo se ejecute una vez al montar\n+  useEffect(() => {\n+    console.log('Componente Home montado. Intentando obtener ID del usuario...');\n+    fetchUserId(); // Llama a la función aquí\n+  }, []); // Dependencia vacía: solo se ejecuta al montar\n+\n+  // Datos estáticos para la sección de Características\n+  const features = [\n+    {\n+      title: 'Autenticación por Voz',\n+      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n+        </svg>\n+      )\n+    },\n+    {\n+      title: 'Seguridad Avanzada',\n+      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n+        </svg>\n+      )\n+    },\n+    {\n+      title: 'Acceso Instantáneo',\n+      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n+        </svg>\n+      )\n+    }\n+  ];\n+\n+  // Asegúrate de que 'user' tenga las propiedades 'username' y 'email'\n+  // que esperas recibir de tu contexto o estado de autenticación\n+  const displayUsername = user?.username || 'Usuario'; // Mostrar 'Usuario' si user o username es undefined\n+  const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n+  const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n+\n+  return (\n+    // Contenedor principal que usa flexbox para la barra lateral y el contenido\n+    // min-h-screen asegura que ocupe al menos la altura completa de la pantalla\n+    <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n+      {/* Sidebar - Se coloca a la izquierda */}\n+      {/* Asegúrate de pasar las props necesarias a Sidebar (ej: user, logout) */}\n+      {/* Ajusta el ancho (ej: w-64) y el fondo (ej: bg-gray-800) dentro del componente Sidebar o aquí si prefieres */}\n+      <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n+\n+      {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n+      {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n+      {/* min-w-0 permite que este contenedor se encoja por debajo de su tamaño de contenido si es necesario */}\n+      <div className=\"flex-1 min-w-0\"> {/* <-- Añadida la clase min-w-0 */}\n+        {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n+        {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n+\n+        {/* Hero Section */}\n+        <div className=\"relative overflow-hidden\">\n+          <div className=\"max-w-7xl mx-auto\">\n+            {/* Ajusta el padding izquierdo (pl-4 sm:pl-6 md:pl-8 lg:pl-8 xl:pl-8) para que no se solape con la sidebar */}\n+            {/* Considera añadir un ml-[sidebar-width] al contenido principal si la sidebar es fija y tiene un ancho definido */}\n+            <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n+              <main className=\"mt-10 mx-auto px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+                <div className=\"sm:text-center lg:text-left\">\n+                  <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n+                    <span className=\"block\">Bienvenido,</span>\n+                    {/* Usar el displayUsername seguro */}\n+                    <span className=\"block text-indigo-600\">{displayUsername}</span>\n+                  </h1>\n+                  <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n+                    Sistema de autenticación biométrica por voz\n+                  </p>\n+                </div>\n+\n+                {/* Stats Section */}\n+                <div className=\"mt-10\">\n+                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n+                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n+                      {/* Usar el displayEmail seguro */}\n+                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n+                    </div>\n+                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n+                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n+                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n+                    </div>\n+                  </dl>\n+                </div>\n+              </main>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Features Section */}\n+        <div className=\"py-12 bg-white\">\n+          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n+            <div className=\"lg:text-center\">\n+              <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n+              <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+                Sistema de Autenticación Avanzado\n+              </p>\n+              <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n+                Descubre las características que hacen único nuestro sistema de autenticación por voz.\n+              </p>\n+            </div>\n+\n+            <div className=\"mt-10\">\n+              <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n+                {features.map((feature) => (\n+                  <div key={feature.title} className=\"relative\">\n+                    <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n+                      {feature.icon}\n+                    </div>\n+                    <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n+                    <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n+                  </div>\n+                ))}\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Action Button */}\n+        <div className=\"bg-gray-50\">\n+          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n+            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n+              <span className=\"block\">¿Listo para salir?</span>\n+              <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n+            </h2>\n+            <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n+              <div className=\"inline-flex rounded-md shadow\">\n+                {/* Usar la función de logout segura */}\n+                <button\n+                  onClick={logoutFunction}\n+                  className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n+                >\n+                  Cerrar Sesión\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+\n+      </div> {/* Cierre del contenedor del contenido principal */}\n+    </div> // Cierre del contenedor flex principal\n+  );\n+};\n+\n+export default Home;\n"
                },
                {
                    "date": 1746121813949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,10 @@\n \n       {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n       {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n       {/* min-w-0 permite que este contenedor se encoja por debajo de su tamaño de contenido si es necesario */}\n-      <div className=\"flex-1 min-w-0\"> {/* <-- Añadida la clase min-w-0 */}\n+      {/* overflow-x-hidden oculta cualquier contenido horizontal que se desborde */}\n+      <div className=\"flex-1 min-w-0 overflow-x-hidden\"> {/* <-- Añadida la clase overflow-x-hidden */}\n         {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n         {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n \n         {/* Hero Section */}\n@@ -242,248 +243,4 @@\n   );\n };\n \n export default Home;\n-import React, { useEffect } from 'react'; // Importa useEffect aquí\n-import { useAuth } from '../../context/AuthContext';\n-import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n-// Importa el componente Sidebar. Ajusta la ruta según la ubicación real de tu archivo Sidebar.jsx\n-// Si Sidebar está en la misma carpeta que MiComponenteBasico (ej: src/pages/LoggedIn/Componentes-Iniciado/SideBar.jsx)\n-// y Home.jsx está en src/pages/LoggedIn/, la ruta relativa sería './Componentes-Iniciado/SideBar'\n-import Sidebar from './Componentes-Iniciado/SideBar'; // <-- Ajusta esta ruta si es necesario\n-\n-const Home = () => {\n-  // user y logout se asumen que vienen del contexto de autenticación\n-  const { user, logout } = useAuth();\n-\n-  // Define la función fetchUserId AQUÍ dentro del componente Home\n-  const fetchUserId = async () => {\n-    const emtemp = sessionStorage.getItem('email');\n-\n-    if (!emtemp) {\n-        console.error('Error: No se encontró el email en sessionStorage.');\n-        // Aquí podrías redirigir al usuario a la página de login si el email no está en sesión\n-        // navigate('/login'); // Si usas react-router-dom y tienes el hook navigate\n-        return; // Salir si no hay email\n-    }\n-\n-    // CORRECCIÓN DE URL: Añadimos el prefijo '/auth' y usamos backticks para template literal\n-    // Asumiendo que config.API_URL es como 'http://localhost:8003' o 'https://dawbackend-production.up.railway.app'\n-    const url = `${config.API_URL}/auth/user_by_email?email=${encodeURIComponent(emtemp)}`; // <-- AÑADIR /auth aquí y usar backticks\n-\n-    const headers = {\n-      // 'Content-Type': 'application/json' no es necesario para GET sin body\n-      'Accept': 'application/json', // Indicar que esperas JSON\n-      'Authorization': `Bearer ${sessionStorage.getItem('access_token')}` // Asegúrate de que el token exista en sessionStorage\n-    };\n-\n-    // Las opciones de fetchOptions del archivo config.js son útiles aquí\n-    // Asumiendo que fetchOptionsFromConfig es accesible o definido aquí\n-    const fetchOptionsFromConfig = {\n-        credentials: 'include', // Necesario porque incluyes headers de auth o si usas cookies\n-        mode: 'cors',\n-        cache: 'no-cache',\n-        redirect: 'follow',\n-        timeout: 10000 // 10 segundos\n-    };\n-\n-    try {\n-        // Usar el método GET\n-        const response = await fetch(url, {\n-          method: 'GET', // Método GET\n-          headers: headers,\n-          ...fetchOptionsFromConfig // Incluir otras opciones de config.js\n-          // NO hay 'body' en una solicitud GET\n-        });\n-\n-        if (!response.ok) {\n-            // Manejar respuestas que no son 2xx (ej: 404, 401, 500)\n-            // Intentar leer el error del backend si la respuesta no está vacía\n-            const errorBody = await response.text(); // Leer como texto si json() falla\n-            let errorData = null;\n-            try {\n-                 errorData = JSON.parse(errorBody);\n-            } catch (e) {\n-                 errorData = errorBody; // Si no es JSON, usar el texto\n-            }\n-\n-\n-            console.error(`Error al obtener el ID del usuario: ${response.status} ${response.statusText}`, errorData);\n-            // Aquí podrías manejar errores específicos, como 401 (No autorizado)\n-            // if (response.status === 401) { logout(); navigate('/login'); } // Ejemplo\n-            throw new Error(`HTTP error! status: ${response.status}`);\n-        }\n-\n-        // Intentar parsear JSON solo si la respuesta fue exitosa\n-        const data = await response.json();\n-\n-        // Acceder a data._id (campo devuelto por MongoDB)\n-        if (data && data._id) {\n-            console.log('ID del usuario obtenido:', data._id); // Log más específico\n-            sessionStorage.setItem('user_id', data._id);\n-            console.log('ID del usuario guardado en sessionStorage.');\n-        } else {\n-             console.error('Error: La respuesta de la API no contiene el campo \"_id\" o es inválida.', data);\n-        }\n-\n-    } catch (error) {\n-        console.error('Error en la llamada fetch para obtener el ID del usuario:', error);\n-        // Aquí podrías mostrar un mensaje al usuario o manejar el error de red\n-    }\n-  };\n-\n-  // Usa useEffect para llamar a fetchUserId cuando el componente se monta\n-  // El array vacío [] asegura que esto solo se ejecute una vez al montar\n-  useEffect(() => {\n-    console.log('Componente Home montado. Intentando obtener ID del usuario...');\n-    fetchUserId(); // Llama a la función aquí\n-  }, []); // Dependencia vacía: solo se ejecuta al montar\n-\n-  // Datos estáticos para la sección de Características\n-  const features = [\n-    {\n-      title: 'Autenticación por Voz',\n-      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n-        </svg>\n-      )\n-    },\n-    {\n-      title: 'Seguridad Avanzada',\n-      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n-        </svg>\n-      )\n-    },\n-    {\n-      title: 'Acceso Instantáneo',\n-      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n-        </svg>\n-      )\n-    }\n-  ];\n-\n-  // Asegúrate de que 'user' tenga las propiedades 'username' y 'email'\n-  // que esperas recibir de tu contexto o estado de autenticación\n-  const displayUsername = user?.username || 'Usuario'; // Mostrar 'Usuario' si user o username es undefined\n-  const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n-  const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n-\n-  return (\n-    // Contenedor principal que usa flexbox para la barra lateral y el contenido\n-    // min-h-screen asegura que ocupe al menos la altura completa de la pantalla\n-    <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n-      {/* Sidebar - Se coloca a la izquierda */}\n-      {/* Asegúrate de pasar las props necesarias a Sidebar (ej: user, logout) */}\n-      {/* Ajusta el ancho (ej: w-64) y el fondo (ej: bg-gray-800) dentro del componente Sidebar o aquí si prefieres */}\n-      <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n-\n-      {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n-      {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n-      <div className=\"flex-1 min-w-0\">\n-        {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n-        {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n-\n-        {/* Hero Section */}\n-        <div className=\"relative overflow-hidden\">\n-          <div className=\"max-w-7xl mx-auto\">\n-            {/* Ajusta el padding izquierdo (pl-4 sm:pl-6 md:pl-8 lg:pl-8 xl:pl-8) para que no se solape con la sidebar */}\n-            {/* Considera añadir un ml-[sidebar-width] al contenido principal si la sidebar es fija */}\n-            <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-              <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n-                <div className=\"sm:text-center lg:text-left\">\n-                  <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n-                    <span className=\"block\">Bienvenido,</span>\n-                    {/* Usar el displayUsername seguro */}\n-                    <span className=\"block text-indigo-600\">{displayUsername}</span>\n-                  </h1>\n-                  <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n-                    Sistema de autenticación biométrica por voz\n-                  </p>\n-                </div>\n-\n-                {/* Stats Section */}\n-                <div className=\"mt-10\">\n-                  <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n-                    <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n-                      {/* Usar el displayEmail seguro */}\n-                      <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{displayEmail}</dd>\n-                    </div>\n-                    <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n-                      <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n-                    </div>\n-                    <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n-                      <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n-                      <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n-                    </div>\n-                  </dl>\n-                </div>\n-              </main>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Features Section */}\n-        <div className=\"py-12 bg-white\">\n-          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n-            <div className=\"lg:text-center\">\n-              <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n-              <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-                Sistema de Autenticación Avanzado\n-              </p>\n-              <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n-                Descubre las características que hacen único nuestro sistema de autenticación por voz.\n-              </p>\n-            </div>\n-\n-            <div className=\"mt-10\">\n-              <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n-                {features.map((feature) => (\n-                  <div key={feature.title} className=\"relative\">\n-                    <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n-                      {feature.icon}\n-                    </div>\n-                    <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n-                    <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n-                  </div>\n-                ))}\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Action Button */}\n-        <div className=\"bg-gray-50\">\n-          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n-            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n-              <span className=\"block\">¿Listo para salir?</span>\n-              <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n-            </h2>\n-            <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n-              <div className=\"inline-flex rounded-md shadow\">\n-                {/* Usar la función de logout segura */}\n-                <button\n-                  onClick={logoutFunction}\n-                  className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n-                >\n-                  Cerrar Sesión\n-                </button>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-\n-      </div> {/* Cierre del contenedor del contenido principal */}\n-    </div> // Cierre del contenedor flex principal\n-  );\n-};\n-\n-export default Home;\n"
                },
                {
                    "date": 1746122033485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect } from 'react'; // Importa useEffect aquí\n+import React, { useEffect, useState } from 'react'; // Importa useEffect y useState aquí\n import { useAuth } from '../../context/AuthContext';\n import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n // Importa el componente Sidebar. Ajusta la ruta según la ubicación real de tu archivo Sidebar.jsx\n // Si Sidebar está en la misma carpeta que MiComponenteBasico (ej: src/pages/LoggedIn/Componentes-Iniciado/SideBar.jsx)\n@@ -9,8 +9,18 @@\n const Home = () => {\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n \n+  // --- Estado para controlar la expansión de la Sidebar ---\n+  const [isSidebarExpanded, setIsSidebarExpanded] = useState(false);\n+\n+  // Función para actualizar el estado de expansión (se pasará a Sidebar)\n+  const handleSidebarToggle = (expanded) => {\n+    setIsSidebarExpanded(expanded);\n+  };\n+  // --- Fin del Estado de la Sidebar ---\n+\n+\n   // Define la función fetchUserId AQUÍ dentro del componente Home\n   const fetchUserId = async () => {\n     const emtemp = sessionStorage.getItem('email');\n \n@@ -129,32 +139,49 @@\n   const displayUsername = user?.username || 'Usuario'; // Mostrar 'Usuario' si user o username es undefined\n   const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n   const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n \n+  // Calcula el padding izquierdo para el contenido principal basado en el estado de la sidebar\n+  // Usa los anchos definidos en tu SideBar.css\n+  const sidebarCollapsedWidth = 60; // px\n+  const sidebarExpandedWidth = 250; // px\n+  const mainContentPaddingLeft = isSidebarExpanded ? sidebarExpandedWidth : sidebarCollapsedWidth;\n+\n+\n   return (\n     // Contenedor principal que usa flexbox para la barra lateral y el contenido\n     // min-h-screen asegura que ocupe al menos la altura completa de la pantalla\n     <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n       {/* Sidebar - Se coloca a la izquierda */}\n-      {/* Asegúrate de pasar las props necesarias a Sidebar (ej: user, logout) */}\n-      {/* Ajusta el ancho (ej: w-64) y el fondo (ej: bg-gray-800) dentro del componente Sidebar o aquí si prefieres */}\n-      <Sidebar user={user} logout={logoutFunction} /> {/* <-- Añade tu componente Sidebar aquí */}\n+      {/* Pasa el estado de expansión y el handler para que Sidebar los use */}\n+      {/* No aplicamos el ancho aquí, Sidebar lo maneja internamente con sus clases */}\n+      {/* Sidebar tiene position: fixed, por lo que no ocupa espacio en el layout flex */}\n+      <Sidebar\n+        isExpanded={isSidebarExpanded} // Pasa el estado de expansión\n+        onToggleExpansion={handleSidebarToggle} // Pasa la función para actualizar el estado\n+        user={user} // Pasa el prop user si Sidebar lo necesita\n+        logout={logoutFunction} // Pasa el prop logout si Sidebar lo necesita\n+      /> {/* <-- Añade tu componente Sidebar aquí */}\n \n       {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n       {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n       {/* min-w-0 permite que este contenedor se encoja por debajo de su tamaño de contenido si es necesario */}\n       {/* overflow-x-hidden oculta cualquier contenido horizontal que se desborde */}\n-      <div className=\"flex-1 min-w-0 overflow-x-hidden\"> {/* <-- Añadida la clase overflow-x-hidden */}\n+      {/* Añadimos padding-left dinámico para empujar el contenido y que no se solape con la sidebar fija */}\n+      <div\n+        className=\"flex-1 min-w-0 overflow-x-hidden\"\n+        style={{ paddingLeft: `${mainContentPaddingLeft}px`, transition: 'padding-left 0.3s ease' }} // Aplica padding dinámico y transición\n+      >\n         {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n         {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n \n         {/* Hero Section */}\n         <div className=\"relative overflow-hidden\">\n           <div className=\"max-w-7xl mx-auto\">\n-            {/* Ajusta el padding izquierdo (pl-4 sm:pl-6 md:pl-8 lg:pl-8 xl:pl-8) para que no se solape con la sidebar */}\n-            {/* Considera añadir un ml-[sidebar-width] al contenido principal si la sidebar es fija y tiene un ancho definido */}\n+            {/* El padding horizontal (px-4, etc.) dentro de main ya maneja el espacio lateral interno */}\n+            {/* No necesitas padding-left adicional aquí si el padding del contenedor flex-1 ya lo maneja */}\n             <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-              <main className=\"mt-10 mx-auto px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+              <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n                 <div className=\"sm:text-center lg:text-left\">\n                   <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                     <span className=\"block\">Bienvenido,</span>\n                     {/* Usar el displayUsername seguro */}\n"
                },
                {
                    "date": 1746122115628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import React, { useEffect, useState } from 'react'; // Importa useEffect y useState aquí\n import { useAuth } from '../../context/AuthContext';\n import { config } from \"../../config\"; // Asegúrate de que la ruta sea correcta: '../../config' si está en src/config.js\n // Importa el componente Sidebar. Ajusta la ruta según la ubicación real de tu archivo Sidebar.jsx\n-// Si Sidebar está en la misma carpeta que MiComponenteBasico (ej: src/pages/LoggedIn/Componentes-Iniciado/SideBar.jsx)\n-// y Home.jsx está en src/pages/LoggedIn/, la ruta relativa sería './Componentes-Iniciado/SideBar'\n import Sidebar from './Componentes-Iniciado/SideBar'; // <-- Ajusta esta ruta si es necesario\n+// Importa el componente Navbar. Ajusta la ruta según la ubicación real de tu archivo Navbar.jsx\n+import Navbar from '../../components/Navbar'; // <-- Ajusta esta ruta si es necesario\n \n+\n const Home = () => {\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n \n@@ -170,10 +171,11 @@\n       <div\n         className=\"flex-1 min-w-0 overflow-x-hidden\"\n         style={{ paddingLeft: `${mainContentPaddingLeft}px`, transition: 'padding-left 0.3s ease' }} // Aplica padding dinámico y transición\n       >\n-        {/* Navbar - Si se usa en el contenido principal, colócalo aquí */}\n-        {/* <Navbar /> */} {/* <-- Añade tu componente Navbar si es necesario aquí */}\n+        {/* Navbar - Se coloca en la parte superior del contenido principal */}\n+        {/* El Navbar se ajustará al ancho disponible dentro de este contenedor flex-1 */}\n+        <Navbar /> {/* <-- Añade tu componente Navbar aquí */}\n \n         {/* Hero Section */}\n         <div className=\"relative overflow-hidden\">\n           <div className=\"max-w-7xl mx-auto\">\n"
                },
                {
                    "date": 1746997224817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,13 @@\n   // user y logout se asumen que vienen del contexto de autenticación\n   const { user, logout } = useAuth();\n \n   // --- Estado para controlar la expansión de la Sidebar ---\n+  // Este estado se compartirá con el componente Sidebar\n   const [isSidebarExpanded, setIsSidebarExpanded] = useState(false);\n \n   // Función para actualizar el estado de expansión (se pasará a Sidebar)\n+  // Sidebar llamará a esta función cuando su estado de hover cambie\n   const handleSidebarToggle = (expanded) => {\n     setIsSidebarExpanded(expanded);\n   };\n   // --- Fin del Estado de la Sidebar ---\n@@ -141,9 +143,11 @@\n   const displayEmail = user?.email || 'Cargando...'; // Mostrar 'Cargando...' si user o email es undefined\n   const logoutFunction = logout || (() => { console.warn(\"Logout function not provided\") }); // Manejar si logout no está disponible\n \n   // Calcula el padding izquierdo para el contenido principal basado en el estado de la sidebar\n-  // Usa los anchos definidos en tu SideBar.css\n+  // --- ¡IMPORTANTE! ---\n+  // Asegúrate de que estos valores (60 y 250) coincidan EXACTAMENTE\n+  // con los valores de 'width' definidos en tu archivo SideBar.css\n   const sidebarCollapsedWidth = 60; // px\n   const sidebarExpandedWidth = 250; // px\n   const mainContentPaddingLeft = isSidebarExpanded ? sidebarExpandedWidth : sidebarCollapsedWidth;\n \n@@ -153,37 +157,39 @@\n     // min-h-screen asegura que ocupe al menos la altura completa de la pantalla\n     <div className=\"flex min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n       {/* Sidebar - Se coloca a la izquierda */}\n       {/* Pasa el estado de expansión y el handler para que Sidebar los use */}\n-      {/* No aplicamos el ancho aquí, Sidebar lo maneja internamente con sus clases */}\n-      {/* Sidebar tiene position: fixed, por lo que no ocupa espacio en el layout flex */}\n+      {/* No aplicamos el ancho aquí, Sidebar lo maneja internamente con sus clases CSS */}\n+      {/* Sidebar tiene position: fixed, por lo que NO ocupa espacio en el layout flex del contenedor padre */}\n       <Sidebar\n         isExpanded={isSidebarExpanded} // Pasa el estado de expansión\n-        onToggleExpansion={handleSidebarToggle} // Pasa la función para actualizar el estado\n+        onToggleExpansion={handleSidebarToggle} // Pasa la función para actualizar el estado (llamada por Sidebar en hover)\n         user={user} // Pasa el prop user si Sidebar lo necesita\n         logout={logoutFunction} // Pasa el prop logout si Sidebar lo necesita\n       /> {/* <-- Añade tu componente Sidebar aquí */}\n \n       {/* Contenedor del Contenido Principal - Ocupa el espacio restante */}\n       {/* flex-1 hace que ocupe todo el espacio disponible en el flex container */}\n       {/* min-w-0 permite que este contenedor se encoja por debajo de su tamaño de contenido si es necesario */}\n-      {/* overflow-x-hidden oculta cualquier contenido horizontal que se desborde */}\n-      {/* Añadimos padding-left dinámico para empujar el contenido y que no se solape con la sidebar fija */}\n+      {/* overflow-x-hidden oculta cualquier contenido horizontal que se desborde dentro de este contenedor */}\n+      {/* Añadimos padding-left dinámico para empujar el contenido y que NO se solape con la sidebar fija */}\n       <div\n         className=\"flex-1 min-w-0 overflow-x-hidden\"\n-        style={{ paddingLeft: `${mainContentPaddingLeft}px`, transition: 'padding-left 0.3s ease' }} // Aplica padding dinámico y transición\n+        style={{ paddingLeft: `${mainContentPaddingLeft}px`, transition: 'padding-left 0.3s ease' }} // Aplica padding dinámico y transición suave\n       >\n         {/* Navbar - Se coloca en la parte superior del contenido principal */}\n         {/* El Navbar se ajustará al ancho disponible dentro de este contenedor flex-1 */}\n+        {/* No necesita padding-left adicional aquí, ya que su contenedor padre (este div) ya tiene el padding */}\n         <Navbar /> {/* <-- Añade tu componente Navbar aquí */}\n \n         {/* Hero Section */}\n+        {/* El resto del contenido de la página */}\n         <div className=\"relative overflow-hidden\">\n           <div className=\"max-w-7xl mx-auto\">\n             {/* El padding horizontal (px-4, etc.) dentro de main ya maneja el espacio lateral interno */}\n-            {/* No necesitas padding-left adicional aquí si el padding del contenedor flex-1 ya lo maneja */}\n+            {/* No necesitas padding-left adicional en los elementos internos si el padding del contenedor flex-1 ya lo maneja */}\n             <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n-              <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n+              <main className=\"mt-10 mx-auto px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n                 <div className=\"sm:text-center lg:text-left\">\n                   <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                     <span className=\"block\">Bienvenido,</span>\n                     {/* Usar el displayUsername seguro */}\n"
                }
            ],
            "date": 1746061768374,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport { useAuth } from '../../context/AuthContext';\n\nconst Home = () => {\n  const { user, logout } = useAuth();\n\n  const features = [\n    {\n      title: 'Autenticación por Voz',\n      description: 'Sistema de seguridad biométrico avanzado que utiliza tu voz como identificación única.',\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n        </svg>\n      )\n    },\n    {\n      title: 'Seguridad Avanzada',\n      description: 'Protección de datos de última generación con encriptación de extremo a extremo.',\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n        </svg>\n      )\n    },\n    {\n      title: 'Acceso Instantáneo',\n      description: 'Inicio de sesión rápido y seguro utilizando tecnología de reconocimiento de voz.',\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n        </svg>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Hero Section */}\n      <div className=\"relative overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:w-full lg:pb-28 xl:pb-32\">\n            <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n              <div className=\"sm:text-center lg:text-left\">\n                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                  <span className=\"block\">Bienvenido,</span>\n                  <span className=\"block text-indigo-600\">{user.username}</span>\n                </h1>\n                <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                  Sistema de autenticación biométrica por voz\n                </p>\n              </div>\n\n              {/* Stats Section */}\n              <div className=\"mt-10\">\n                <dl className=\"rounded-lg bg-white shadow-lg sm:grid sm:grid-cols-3\">\n                  <div className=\"flex flex-col border-b border-gray-100 p-6 text-center sm:border-0 sm:border-r\">\n                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Email</dt>\n                    <dd className=\"order-1 text-2xl font-extrabold text-indigo-600\">{user.email}</dd>\n                  </div>\n                  <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 sm:border-l sm:border-r\">\n                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Sesión</dt>\n                    <dd className=\"order-1 text-5xl font-extrabold text-indigo-600\">Activa</dd>\n                  </div>\n                  <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 sm:border-l\">\n                    <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-500\">Estado</dt>\n                    <dd className=\"order-1 text-5xl font-extrabold text-green-600\">✓</dd>\n                  </div>\n                </dl>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n\n      {/* Features Section */}\n      <div className=\"py-12 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:text-center\">\n            <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Características</h2>\n            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n              Sistema de Autenticación Avanzado\n            </p>\n            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n              Descubre las características que hacen único nuestro sistema de autenticación por voz.\n            </p>\n          </div>\n\n          <div className=\"mt-10\">\n            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-3 md:gap-x-8 md:gap-y-10\">\n              {features.map((feature) => (\n                <div key={feature.title} className=\"relative\">\n                  <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n                    {feature.icon}\n                  </div>\n                  <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.title}</p>\n                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Action Button */}\n      <div className=\"bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n            <span className=\"block\">¿Listo para salir?</span>\n            <span className=\"block text-indigo-600\">Cierra tu sesión de forma segura.</span>\n          </h2>\n          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n            <div className=\"inline-flex rounded-md shadow\">\n              <button\n                onClick={logout}\n                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transform transition-all duration-200 hover:scale-105\"\n              >\n                Cerrar Sesión\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home; "
        }
    ]
}